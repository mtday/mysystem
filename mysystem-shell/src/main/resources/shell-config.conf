
akka {
  actor {
    provider = "akka.cluster.ClusterActorRefProvider"

    serializers {
      mysystem = "mysystem.common.serialization.ModelSerialization"
    }
    serialization-bindings {
      "mysystem.common.model.Model" = "mysystem"
    }
  }

  cluster {
    # The roles the shell will have within the cluster.
    roles = [ "${project.version}", "shell" ]
    seed-nodes = [
      "akka.tcp://mysystem@127.0.0.1:2551"
    ]

    auto-down-unreachable-after = 10s
    metrics.enabled = off
  }

  # Set the port to 0 so we get a random port.
  remote.netty.tcp.port = 0

  # Turn off logging so it does not interfere with the shell input/output.
  log-dead-letters = 0
  log-dead-letters-during-shutdown = false
  stdout-loglevel = "ERROR"
  loglevel = "ERROR"
}

mysystem {
  actor.system.name = "mysystem"
  shell.commands {
    exit-command {
      class = "mysystem.shell.command.ExitCommand"
    }
    help-command {
      class = "mysystem.shell.command.HelpCommand"
    }
    config-command {
      class = "mysystem.shell.command.ConfigCommand"
    }
    cluster-command {
      class = "mysystem.shell.command.ClusterCommand"
    }
    database-command {
      class = "mysystem.shell.command.DatabaseCommand"
    }
  }
}

